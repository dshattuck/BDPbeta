name: Build BDP release package
run-name: Build BDP by @${{ github.actor }}

on:
  workflow_dispatch:
  release:
    types: [created]
  # push:
  #   branches: [main]
  # pull_request:
  #   branches: [main]
env:
  RELEASEVERSION: ${{ github.ref_name }}
  VERSION: "25a"
  BUILD_NO: "0077"
  MLM_LICENSE_TOKEN: ${{ secrets.MATLAB_TOKEN }}
jobs:
  build:
    permissions: write-all
    name: Build BDP on GitHub Runner
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        #, windows-latest, macos-13, macos-15]
    runs-on:
      labels: ["${{ matrix.os }}" ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          products: >
            MATLAB_Compiler
            Image_Processing_Toolbox
            Medical_Imaging_Toolbox
            Parallel_Computing_Toolbox

      - name: set MacOS x64 environment variables
        if: runner.os == 'macOS' && runner.arch == 'X64'
        run: |
          echo "Package=${PWD}/packaging_tools/bdp_${{ env.VERSION }}_build${{ env.BUILD_NO }}_maci64.tar.gz" >> $GITHUB_ENV

      - name: set MacOS x64 environment variables
        if: runner.os == 'macOS' && runner.arch == 'ARM64'
        run: |
          echo "Package=${PWD}/packaging_tools/bdp_${{ env.VERSION }}_build${{ env.BUILD_NO }}_maca64.tar.gz" >> $GITHUB_ENV

      - name: set Linux environment variables
        if: runner.os == 'Linux'
        run: |
          echo "Package=${PWD}/packaging_tools/bdp_${{ env.VERSION }}_build${{ env.BUILD_NO }}_linux.tar.gz" >> $GITHUB_ENV

      - name: set Windows environment variables
        if: runner.os == 'Windows'
        run: |
          echo "Package=${PWD}/packaging_tools/bdp_${{ env.VERSION }}_build${{ env.BUILD_NO }}_win64.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        
      - name: compile BDP Mex files
        uses: matlab-actions/run-command@v2
        with:
          startup-options: -sd packaging_tools
          command: CompileBDPMexFiles
          
      - name: compile BDP
        uses: matlab-actions/run-command@v2
        with:
          startup-options: -sd packaging_tools
          command: "CompileBrainSuiteDiffusionPipeline --package ${{ env.VERSION }} --build ${{ env.BUILD_NO }} --lic GPL"
          
      - name: Publish ${{ env.Package }}
        if: github.event_name == 'release'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.Package }}"
          tag: v${{ env.VERSION }}        
          allowUpdates: true
